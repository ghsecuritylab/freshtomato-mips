--- getdns/src/context.c	2018-09-08 17:50:58.784301357 +0200
+++ getdns/src/context.c	2018-09-08 22:58:16.000000000 +0200
@@ -2736,7 +2736,7 @@ getdns_context_set_upstream_recursive_se
 	}
 	memset(&hints, 0, sizeof(struct addrinfo));
 	hints.ai_family    = AF_UNSPEC;      /* Allow IPv4 or IPv6 */
-	hints.ai_socktype  = 0;              /* Datagram socket */
+	hints.ai_socktype  = SOCK_STREAM;    /* Datagram socket */
 	hints.ai_flags     = AI_NUMERICHOST; /* No reverse name lookups */
 	hints.ai_protocol  = 0;              /* Any protocol */
 	hints.ai_canonname = NULL;
--- getdns/src/server.c	2018-09-08 17:50:58.796301396 +0200
+++ getdns/src/server.c	2018-09-08 22:59:43.000000000 +0200
@@ -976,9 +976,14 @@ getdns_return_t getdns_context_set_liste
 	for (i = 0; i < new_set->count; i++)
 		new_set->items[i].fd = -1;
 
-	(void) memset(&hints, 0, sizeof(struct addrinfo));
-	hints.ai_family    = AF_UNSPEC;
-	hints.ai_flags     = AI_NUMERICHOST;
+	memset(&hints, 0, sizeof(struct addrinfo));
+	hints.ai_family    = AF_UNSPEC;      /* Allow IPv4 or IPv6 */
+	hints.ai_socktype  = SOCK_STREAM;    /* Datagram socket */
+	hints.ai_flags     = AI_NUMERICHOST; /* No reverse name lookups */
+	hints.ai_protocol  = 0;              /* Any protocol */
+	hints.ai_canonname = NULL;
+	hints.ai_addr      = NULL;
+	hints.ai_next      = NULL;
 
 	for (i = 0; !r && i < new_set_count; i++) {
 		getdns_dict             *dict = NULL;
